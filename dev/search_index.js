var documenterSearchIndex = {"docs":
[{"location":"#BcdiMeso.jl-Documentation","page":"BcdiMeso","title":"BcdiMeso.jl Documentation","text":"","category":"section"},{"location":"#About","page":"BcdiMeso","title":"About","text":"","category":"section"},{"location":"","page":"BcdiMeso","title":"BcdiMeso","text":"Bragg Coherent Diffraction Imaging (BCDI) Meso (Mesoscale) implements phase retrieval for mesoscale models with stochastic gradient descent.","category":"page"},{"location":"","page":"BcdiMeso","title":"BcdiMeso","text":"While this package is marked as BCDI specific, the methods are more general and can be used in many phase retrieval problems. In the future, this package may be incorporated into a more general phase retrieval package.","category":"page"},{"location":"","page":"BcdiMeso","title":"BcdiMeso","text":"Currently, this entire package must be run with access to GPUs. This may change in the future (especially if Issues requesting it are opened), but for our research group, using GPUs is a necessity.","category":"page"},{"location":"#Installation","page":"BcdiMeso","title":"Installation","text":"","category":"section"},{"location":"","page":"BcdiMeso","title":"BcdiMeso","text":"BcdiStrain.jl is registered in the Julia general registry and can be installed by running in the REPL package manager (]):","category":"page"},{"location":"","page":"BcdiMeso","title":"BcdiMeso","text":"add BcdiMeso","category":"page"},{"location":"refs/#References","page":"References","title":"References","text":"","category":"section"},{"location":"refs/","page":"References","title":"References","text":"J. Carnis, L. Gao, S. Labat, Y. Y. Kim, J. P. Hofmann, S. J. Leake, T. U. Schülli, E. J. Hensen, O. Thomas and M.-I. Richard. Towards a quantitative determination of strain in Bragg Coherent X-ray Diffraction Imaging: artefacts and sign convention in reconstructions. Scientific Reports 9, 17357 (2019). Publisher: Nature Publishing Group.\n\n\n\n","category":"page"},{"location":"use/#Overview","page":"Usage","title":"Overview","text":"","category":"section"},{"location":"use/","page":"Usage","title":"Usage","text":"BcdiMeso implements phase retrieval in operator-style format. This means that the multiplication (*) and power (^) operators are used to apply operators to some current state. This may look like the following:","category":"page"},{"location":"use/","page":"Usage","title":"Usage","text":"state = State(intens, gVecs, recSupport, x, y, z, rho, ux, uy, uz)\noptimizeState = OptimizeState(state, primitiveRecipLattice, numPeaks)\n\noptimizeState^100 * state","category":"page"},{"location":"use/","page":"Usage","title":"Usage","text":"This short script applies 100 stochastic gradient descent iterations iterations. This makes it easy to implement very complex recipes for phase retrieval algorithms.","category":"page"},{"location":"use/#API","page":"Usage","title":"API","text":"","category":"section"},{"location":"use/","page":"Usage","title":"Usage","text":"BcdiMeso.State\nBcdiMeso.OptimizeState","category":"page"},{"location":"use/#BcdiMeso.State","page":"Usage","title":"BcdiMeso.State","text":"State(intensities, gVecs, recSupport, x, y, z, rho, ux, uy, uz)\n\nCreate the reconstruction state. intensities is a vector of fully measured diffraction peaks, gVecs is a vector of peak locations, and recSupport is a vector of masks over the intensities that removes those intenities from the reconstruction process. The positions of real space points (x, y, and z) must be passed in as well as the magnitude of the electron density rho and the displacement field (ux, uy, and uz).\n\nThe initialization process shifts each peak to be centered (i.e. the center of  mass of the peak is moved to the center of the image). \n\n\n\n\n\n","category":"type"},{"location":"use/#BcdiMeso.OptimizeState","page":"Usage","title":"BcdiMeso.OptimizeState","text":"OptimizeState(state, primitiveRecipLattice, numPeaks)\n\nCreate an object that performs an iteration of stochastic gradient descent. numPeaks number of peaks are selected randomly. One step of gradient descent is taken using the More-Thuente linesearch.\n\nThis implimentation takes into account effects of small angle measurement  usually ignored in the BCDI problem. This is described in [1] although this implimentation will be faster because a NUFFT is used instead of many FFTs.\n\n\n\n\n\n","category":"type"}]
}
